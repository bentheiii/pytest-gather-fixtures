name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']
        lib_versions:
          - pytest_version: "^8.0.0"
            pytest_asyncio_version: "^0.23.0"
          - pytest_version: "^7.0.0"
            pytest_asyncio_version: "^0.21.0"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install PIP
      run: |
        python -m pip install --upgrade pip
    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-pip-
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        pip install poetry
        poetry update --lock
        poetry install
        pip install pytest=${{ matrix.lib_versions.pytest_version }} pytest-asyncio=${{ matrix.lib_versions.pytest_asyncio_version }}
    - name: Lint
      run: |
        poetry run sh scripts/lint.sh
    - name: Tests
      run: |
        poetry run sh scripts/unittest.sh
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
